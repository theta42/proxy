<%- include('top') %>
<script type="text/javascript">
	// Require login to see this page.
	app.auth.forceLogin();
</script>

<style type="text/css">
	label.form-label{
		font-weight: bold;
		margin-bottom: 1px;
	}

	.card-title{
		font-weight: bold;
	}

	div.form-group{
		margin-bottom: 1em;
	}

	select {
		font-family: "system-ui", "FontAwesome";
	}

</style>

<script type="text/javascript">

	function providerGet(){
		app.api.options('dns', function(error, res){
			for(let provider of res.results){
				$.scope.providerSelect.push(provider);

				for(let field in provider.fields){
					$.scope.providerField.push({
						...provider.fields[field],
						keyName: field,
						provider: provider.name
					});
				}
			}
		});
	}

	function providerShowForm(){
		let $el = $(event.target);
		$('.jq-repeat-providerField').each(function(){
			let $el = $(this)
			$el.hide()
			$el.find('input').prop('disabled', true)
		});

		$(`.provider-form-${$el.val()}`).each(function(){
			let $el = $(this)
			$el.show()
			$el.find('input').prop("disabled",false)
		});
	}

	$.scope.DnsProvider.parseData = function(row){
		row['created_on_text'] = moment(row['updated_on'], "x").fromNow();
		row['domainsString'] = JSON.stringify(row.domains);
		return row
	};

	$(document).ready(async function(){
		// Set the jq Templates
		$.scope.providerField.put = function(){};
		$.scope.DnsProvider.push(...(await app.api.get('/dns?detail=true')).results);

		// Populate 
		providerGet();

		app.subscribe(/^model:/, function(data, topic){
			let [group, Model, action, pk] = topic.split(':');
			console.log('WS:', group, Model, action, pk, data);
		});

		app.subscribe(/^model:.+:create/, function(data, topic){
			try{
				let [group, Model, action, pk] = topic.split(':');
				$.scope[Model].unshift(data)
			}catch{}
		});

		app.subscribe(/^model:.+:remove/, function(data, topic){
			try{
				let [group, Model, action, pk] = topic.split(':');
				$.scope[Model].remove(pk);
			}catch{}
		});

		app.subscribe(/^model:.+:update/, function(data, topic){
			try{
				let [group, Model, action, pk] = topic.split(':');
				$.scope[Model].update(pk, data)
			}catch{}
		});
	});

</script>
<div class="row mb-3" style="display:none">
	<div class="col-md-3">
		<div class="card shadow-lg mb-3">

			<div class="card-header text-center">
				<span class="card-icon float-start">
					<i class="fa-solid fa-user-plus"></i>
				</span>
				<span class="card-title">
					Add DNS Provider
				</span>
				<span class="float-end">
					<i class="fa-solid fa-circle-minus"></i>
				</span>
			</div>

			<div class="card-header actionMessage" style="display:none"></div>
			<div class="card-body d-none d-md-block">
				<form action="dns/" onsubmit="formAJAX(this)">
					<div class="form-group">
						<label for="name" class="form-label">
							Name
						</label>
						<input type="text"  name="name" class="form-control" placeholder="ex: production" validate=":3"/>
						<b class="invalid-feedback"></b>
					</div>

					<div class="form-group">
						<label for="dnsProvider" class="form-label">
							DNS provider
						</label>
						<select name="dnsProvider" class="form-select" aria-label="Default select example" validate=":1" oninput="providerShowForm()">
							<option value="" selected>Select a provider</option>
							<option jq-repeat="providerSelect" value="{{name}}">{{{displayIconUni}}} {{name}}</option>

						</select>
						<b class="invalid-feedback"></b>
					</div>

					<div class="form-group provider-form-{{ provider }}" jq-repeat="providerField" style="display:none;">
						<label for="{{ keyName }}" class="form-label">
							{{displayName}}
						</label>
						<input type="text"  name="{{ keyName }}" class="form-control" validate=":3" disabled/>
						<b class="invalid-feedback"></b>
					</div>

					<hr />
					<button type="submit" class="btn btn-success">
						<i class="fa-solid fa-plus"></i>
						Add
					</button>
				</form>
			</div>
		</div>
	</div>
	<div class="col-md-9">
		<div class="row row-cols-1 row-cols-md-2 g-4">
			
			<div jq-repeat="DnsProvider" jq-repeat-index="id" style="display:none" class="col">
				<div class="card shadow-lg">

					<div class="card-header text-center">
						<span class="card-icon float-start">
							<i class="fa-solid fa-record-vinyl"></i>
						</span>
						<span class="card-title">
							 {{ dnsProvider }} DNS
						</span>
						<span class="float-end">
							<i class="fa-solid fa-circle-minus"></i>
						</span>
					</div>

					<div class="card-header actionMessage" style="display:none"></div>
					<div class="card-body">
						<div class="row">
								<h3><img height="32px" src="{{ displayIconHtml }}"/> {{name}} </h3>
						</div>
						<div>
							<b jq-repeat='Domain_{{id}}' jq-repeat-index="domain" class="me-2 my-1 badge text-bg-info rounded-pill fs-6">
								{{domain}}
							</b>
							<script type="text/javascript">
								try{
									$.scope.Domain_{{id}}.push(...{{{domainsString}}});
								}catch{}
							</script>
						</div>
					</div>
					<div class="card-footer">
						Added <b class="momentFromNow" data-date="{{ updated_on }}">{{ created_on_text }}</b> by <b>{{ created_by }}</b>
						<span class="float-end text-end">
							<button type="button" class="btn btn-warning" method="POST" action="/dns/domain/refresh/{{id}}" onclick="formAJAX()">
								<i class="fa-solid fa-rotate"></i>
							</button>
							<button type="button" class="btn btn-danger" method="DELETE" action="dns/{{id}}" onclick="formAJAX()">
								<i class="fa-solid fa-trash-can"></i>
							</button>
						</span>
					</div>

					
				</div>

			</div>
		</div>

	</div>
</div>
<%- include('bottom') %>
